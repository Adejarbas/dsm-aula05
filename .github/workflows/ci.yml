name: Versionamento

on:
  push:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checar repositório
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.AULA_TESTE_IEC }}
          fetch-depth: 0

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Instalar dependências
        run: npm install

      - name: Instalar semver
        run: npm install -g semver

      - name: Criar nova tag caso não exista
        id: create_initial_tag
        env:
          GH_TOKEN: ${{ secrets.AULA_TESTE_IEC }}
        run: |
          if [ -z "$(git tag)" ]; then
            git config --global user.name 'github-actions'
            git config --global user.email 'github-actions@github.com'
            git tag -a v0.0.0 -m "Initial release"
            git push origin v0.0.0
          fi


      - name: Calcular próxima versão patch
        id: next_version
        run: |
          git fetch --tags
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          NEXT_VERSION=$(npx semver $LAST_TAG -i patch)
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "Última tag: $LAST_TAG"
          echo "Próxima versão: $NEXT_VERSION"

      - name: Criar e subir nova tag
        env:
          GH_TOKEN: ${{ secrets.AULA_TESTE_IEC }}
        run: |
          git fetch --tags
          if git rev-parse "$NEXT_VERSION" >/dev/null 2>&1; then
            echo "Tag $NEXT_VERSION já existe. Nada a fazer."
          else
            git config --global user.name 'github-actions'
            git config --global user.email 'github-actions@github.com'
            git tag -a $NEXT_VERSION -m "Release $NEXT_VERSION"
            git push origin $NEXT_VERSION
          fi

      - name: Atualizar versão no package.json
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          if [ "$CURRENT" != "${NEXT_VERSION#v}" ]; then
            npm version $NEXT_VERSION --no-git-tag-version
          else
            echo "Versão já está atualizada no package.json"
          fi

      - name: Commit e push
        env:
          GH_TOKEN: ${{ secrets.AULA_TESTE_IEC }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add package.json
          git commit -m "chore(release): version ${{ env.NEXT_VERSION }}"
          git tag v${{ env.NEXT_VERSION }}
          git push origin main --tags
